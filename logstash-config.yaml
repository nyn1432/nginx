apiVersion: v1
kind: ConfigMap
metadata:
  name: quickstart
  labels:
    app.kubernetes.io/name: elasticsearch-logstash
    app.kubernetes.io/component: logstash
data:
  logstash.yml: |
    http.host: 0.0.0.0
    pipeline.ecs_compatibility: disabled
  pipelines.yml: |
    - pipeline.id: logstash
      path.config: "/usr/share/logstash/pipeline/logstash.conf"
 
  log4j2.properties: |
    logger.logstashpipeline.name = logstash.inputs.beats
    logger.logstashpipeline.level = error
 
---
 
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
  labels:
    app.kubernetes.io/name: elasticsearch-logstash
    app.kubernetes.io/component: logstash
data:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    filter {
      if [message] =~ /^\s*\{.*\}\s*$/ {
        json {
          source => "message"
        }
      }
    }
    output {
      if [message]  =~ /admission/ {
        elasticsearch {
          index => "logstashadmission-%{+YYYY.MM.dd}"
          hosts => ["${ES_HOSTS}"]
          user => "${ES_USER}"
          password => "${ES_PASSWORD}"
          ssl => true
          ssl_verification_mode => "none"
        }
      } else if [kubernetes][pod][name] =~ /nginx-statefulset/ {
        elasticsearch {
          index => "nginx-logs-%{+YYYY.MM.dd}"
          hosts => ["${ES_HOSTS}"]
          user => "${ES_USER}"
          password => "${ES_PASSWORD}"
          ssl => true
          ssl_verification_mode => "none"
        }
      }
      stdout {
        codec => rubydebug { metadata => true }
      }
    }